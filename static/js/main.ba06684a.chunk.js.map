{"version":3,"sources":["components/RequestPage.js","components/Header.js","components/ButtonStart.js","components/ConnectionsView.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["RequestPage","kk","useParams","id","useEffect","setUrlParams","useState","urlParams","Header","props","headerHeight","userName","firebase","auth","currentUser","displayName","userPhotoUrl","photoURL","menu","setMenu","style","height","position","left","right","top","backgroundColor","zIndex","display","boxShadow","flex","alignItems","justifyContent","width","color","borderRadius","onClick","src","border","flexDirection","padding","signOut","withStyles","root","background","classes","className","children","other","buttonName","haveconnections","Button","clsx","ConnectionsView","marginTop","map","items","marginBottom","Dashboard","dHeight","haveConnections","setSelectorModal","bottom","transform","toString","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","update","setState","window","innerHeight","state","isSignedIn","addEventListener","this","unregisterAuthObserver","onAuthStateChanged","user","CircularProgress","size","path","firebaseAuth","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gTAiBeA,EAdK,WAChB,IAAIC,EAAKC,cAAYC,GACrBC,qBAAU,WACNC,EAAaJ,MAHK,MAKYK,mBAAS,IALrB,mBAKfC,EALe,KAKJF,EALI,KAMtB,OACI,6BACI,2CACA,mCAASE,K,kCCPN,SAASC,EAAOC,GAC7B,IAAMC,EAAeD,EAAMC,aACrBC,EAAWC,IAASC,OAAOC,YAAYC,YACvCC,EAAeJ,IAASC,OAAOC,YAAYG,SAHb,EAMZX,mBAAS,QANG,mBAM7BY,EAN6B,KAMvBC,EANuB,KAQpC,OACE,yBAAKC,MAAO,CAAEC,OAAQX,EAAcY,SAAU,QAASC,KAAM,EAAGC,MAAO,EAAGC,IAAK,EAAGC,gBALpE,UAKgGC,OAAQ,EAAGC,QAAS,OAAQC,UAAW,sCACnJ,yBAAKT,MAAO,CAAEU,KAAM,EAAGF,QAAS,OAAQG,WAAY,SAAUC,eAAgB,iBAC5E,yBAAKZ,MAAO,CAAEC,OAAQ,MAAOY,MAAO,GAAIC,MAP9B,UAOgDR,gBANhD,QAM4EM,eAAgB,SAAUD,WAAY,SAAUH,QAAS,OAAQO,aAAc,IACnK,oCAEF,yBAAKf,MAAO,CAAEC,OAAQ,MAAOY,MAAO,MAAOC,MATjC,QASmDR,gBAVnD,UAU+EK,WAAY,SAAUH,QAAS,SACtH,2BAAIjB,KAGR,yBAAKS,MAAO,CAAEU,KAAM,IAAMF,QAAS,OAAQG,WAAY,SAAUC,eAAgB,iBAC/E,kBAAC,IAAD,CAAcZ,MAAO,CAAEc,MAdb,WAeV,kBAAC,IAAD,CAAmBd,MAAO,CAAEc,MAflB,WAgBV,yBAAKE,QAAS,kBAAuBjB,EAAR,SAATD,EAAyB,OAAkB,UAC7D,yBAAKmB,IAAKrB,EAAcI,MAAO,CAAEC,OAAQ,GAAIY,MAAO,GAAIE,aAAc,OAExE,yBAAKf,MAAO,CAACE,SAAS,QAASE,MAAM,EAAGC,IAAIf,EAAcW,OAAO,IAAKY,MAAM,IAAKP,gBAAgB,YAAaY,OAAQ,iBAAkBV,QAAQV,EAAMqB,cAAc,SAAUC,QAAQ,KACpL,yBAAKpB,MAAO,CAACU,KAAK,KAClB,yBAAKV,MAAO,CAACU,KAAK,KAClB,yBAAKM,QAAS,kBAAMxB,IAASC,OAAO4B,WAAWrB,MAAO,CAACU,KAAK,EAAGF,QAAQ,OAAQG,WAAW,SAAUC,eAAe,WAAnH,e,mCCJKU,kBAtBA,CACbC,KAAM,CACJC,WAAY,mDACZT,aAAc,GACdD,MAAO,QACPb,OAAQ,GACRmB,QAAS,SACTX,UAAW,0CAeAa,EAXf,SAAqBjC,GAAQ,IACnBoC,EAA2CpC,EAA3CoC,QAAmBC,GAAwBrC,EAAlCsC,SAAkCtC,EAAxBqC,WAAcE,EADf,YACyBvC,EADzB,oCAEpBwC,EAAaxC,EAAMyC,gBACzB,OACE,kBAACC,EAAA,EAAD,eAAQL,UAAWM,YAAKP,EAAQF,KAAMG,IAAgBE,GAErC,UAAdC,EAAwB,cAAc,aCN9BI,MAff,WAEE,OACE,yBAAKjC,MAAO,CAAEU,KAAM,EAAGT,OAAQ,cAAeK,gBAAiB,YAC7D,yBAAKN,MAAO,CAAEQ,QAAS,OAAQ0B,UAAW,GAAIf,cAAe,SAAUR,WAAY,WAH9E,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAI3BwB,KAAI,SAACC,GAAD,OACN,yBAAKpC,MAAO,CAAES,UAAW,0BAA2BR,OAAQ,GAAIY,MAAO,MAAOwB,aAAc,GAAI/B,gBAAiB,iBCkB5GgC,MAtBf,SAAmBjD,GACMA,EAAMC,aACXD,EAAMkD,QADtB,IADsB,EAGwBrD,oBAAS,GAHjC,mBAGfsD,EAHe,aAIoBtD,mBAAS,SAJ7B,mBAIAuD,GAJA,WAMtB,OACI,kBAAC,WAAD,KACKD,EAAkB,kBAAC,EAAD,MAEf,yBAAKxC,MAAO,CAAEU,KAAM,EAAGF,QAAS,OAAQG,WAAY,SAAUC,eAAgB,SAAUO,cAAe,SAAUb,gBAAiB,YAC9H,kEACA,8DAGR,yBAAKU,QAAS,kBAAMyB,EAAiB,SAASzC,MAAO,CAAEE,SAAU,QAASwC,OAAQ,EAAGC,UAAW,wBAAyBxC,KAAM,QAC3H,kBAAC,EAAD,CAAa2B,gBAAiBU,EAAgBI,gBCD9DpD,IAASqD,cAVM,CACbC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,IAkFFC,E,kDA7Eb,aAAe,IAAD,8BACZ,gBAQFC,SAAW,CACTC,WAAY,QACZC,cAAe,CACbjE,IAASC,KAAKiE,mBAAmBC,YACjCnE,IAASC,KAAKmE,qBAAqBD,aAErCE,UAAW,CACTC,4BAA6B,kBAAM,KAhBzB,EAoBdC,OAAS,WACP,EAAKC,SAAS,CACZzB,QAAS0B,OAAOC,eApBlB,EAAKC,MAAQ,CACXC,WAAY,KACZ7B,QAAS,EACTjD,aAAc,IAEhB2E,OAAOI,iBAAiB,SAAU,EAAKN,QAP3B,E,gEA0BO,IAAD,OAClBO,KAAKP,SACLO,KAAKC,uBAAyB/E,IAASC,OAAO+E,oBAC5C,SAACC,GACC,EAAKT,SAAS,CAAEI,aAAcK,S,6CAMlCH,KAAKC,2B,+BAIL,OAA8B,OAA1BD,KAAKH,MAAMC,WAEX,yBAAKpE,MAAO,CAAEE,SAAU,QAASyC,UAAW,wBAAyBtC,IAAK,MAAOF,KAAM,QACrF,kBAACuE,EAAA,EAAD,CAAkBC,KAAM,OAIK,IAA1BL,KAAKH,MAAMC,WAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,eAAejD,SAAU,kBAAC,EAAD,QACrC,yBAAK3B,MAAO,CAAEC,OAAQqE,KAAKH,MAAM5B,UAC/B,kBAACnD,EAAD,CAAQE,aAAcgF,KAAKH,MAAM7E,eACjC,yBAAKU,MAAO,CAAEC,OAAQqE,KAAKH,MAAM7E,gBACjC,yBAAKU,MAAO,CAAEQ,QAAQ,OAAOP,OAAQqE,KAAKH,MAAM5B,QAAU+B,KAAKH,MAAM7E,eACnE,yBAAKU,MAAO,CAACU,KAAK,EAAGF,QAAQ,SAC7B,kBAAC,EAAD,CAAWlB,aAAcgF,KAAKH,MAAM7E,aAAciD,QAAS+B,KAAKH,MAAM5B,eAU9E,6BACE,sCACA,8CACA,kBAAC,IAAD,CAAoBgB,SAAUe,KAAKf,SAAUsB,aAAcrF,IAASC,c,GAvE5DqF,IAAMC,WCTJC,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba06684a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst RequestPage = () => {\r\n    let kk = useParams().id\r\n    useEffect(() => {\r\n        setUrlParams(kk)\r\n    })\r\n    const [urlParams, setUrlParams] = useState('')\r\n    return (\r\n        <div>\r\n            <p>Request Page</p>\r\n            <h3>ID: {urlParams}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestPage","import React, {useState} from 'react';\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport firebase from 'firebase'\r\n\r\nexport default function Header(props) {\r\n  const headerHeight = props.headerHeight\r\n  const userName = firebase.auth().currentUser.displayName\r\n  const userPhotoUrl = firebase.auth().currentUser.photoURL\r\n  let appColor1 = '#E74292'\r\n  let appColor2 = 'white'\r\n  const [menu, setMenu] = useState('none')\r\n\r\n  return (\r\n    <div style={{ height: headerHeight, position: 'fixed', left: 0, right: 0, top: 0, backgroundColor: appColor1, zIndex: 1, display: 'flex', boxShadow: '0 2px 5px 2px rgba(0, 0, 0, 0.15)'}}>\r\n      <div style={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'space-around' }}>\r\n        <div style={{ height: '70%', width: 50, color: appColor1, backgroundColor: appColor2, justifyContent: 'center', alignItems: 'center', display: 'flex', borderRadius: 3 }}>\r\n          <h3>GOT</h3>\r\n        </div>\r\n        <div style={{ height: '70%', width: '68%', color: appColor2, backgroundColor: appColor1, alignItems: 'center', display: 'flex' }}>\r\n          <p>{userName}</p>\r\n        </div>\r\n      </div>\r\n      <div style={{ flex: 0.55, display: 'flex', alignItems: 'center', justifyContent: 'space-around' }}>\r\n        <SettingsIcon style={{ color: appColor2 }} />\r\n        <NotificationsIcon style={{ color: appColor2 }} />\r\n        <div onClick={() => menu === 'none'? setMenu('flex') : setMenu('none')}>\r\n          <img src={userPhotoUrl} style={{ height: 30, width: 30, borderRadius: 16 }} />\r\n        </div>\r\n        <div style={{position:'fixed', right:2, top:headerHeight, height:150, width:150, backgroundColor:'lightgrey', border: '1px solid pink', display:menu, flexDirection:'column', padding:15}}>\r\n          <div style={{flex:1}}></div>\r\n          <div style={{flex:1}}></div>\r\n          <div onClick={() => firebase.auth().signOut()} style={{flex:1, display:'flex', alignItems:'center', justifyContent:'center'}}>Sign Out</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// We can inject some CSS into the DOM.\r\nconst styles = {\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 24,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .5)',\r\n  },\r\n};\r\n\r\nfunction ButtonStart(props) {\r\n  const { classes, children, className, ...other } = props;\r\n  const buttonName = props.haveconnections\r\n  return (\r\n    <Button className={clsx(classes.root, className)} {...other}>\r\n      {/* {children || 'class names'} */}\r\n      {buttonName ==='false' ? 'Get Started':'Invite'} \r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(ButtonStart);","import React from 'react'\r\n\r\nfunction ConnectionsView() {\r\n  let kk = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n  return (\r\n    <div style={{ flex: 1, height: 'min-content', backgroundColor: '#EAF0F1' }}>\r\n      <div style={{ display: 'flex', marginTop: 20, flexDirection: 'column', alignItems: 'center', }}>\r\n        {kk.map((items) =>\r\n          <div style={{ boxShadow: '1px 2px 6px 0px #888888', height: 80, width: '85%', marginBottom: 20, backgroundColor: 'white' }}>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConnectionsView;","import React, { useState, Fragment } from 'react'\r\nimport ButtonStart from './ButtonStart'\r\nimport ConnectionsView from './ConnectionsView'\r\n\r\nfunction Dashboard(props) {\r\n    const headerHeight = props.headerHeight\r\n    const dHeight = props.dHeight\r\n    const [haveConnections, setHaveConnections] = useState(true)\r\n    const [selectorModal, setSelectorModal] = useState('none')\r\n\r\n    return (\r\n        <Fragment>\r\n            {haveConnections ? <ConnectionsView />\r\n                :\r\n                <div style={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', backgroundColor: '#EAF0F1' }}>\r\n                    <p>You haven't played with anyone yet.</p>\r\n                    <p>Tap the below button to begin.</p>\r\n                </div>\r\n            }\r\n            <div onClick={() => setSelectorModal('flex')} style={{ position: 'fixed', bottom: 0, transform: 'translate(-50%, -50%)', left: '50%' }}>\r\n                <ButtonStart haveconnections={haveConnections.toString()} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react'\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport RequestPage from './components/RequestPage'\nimport Header from './components/Header'\nimport Dashboard from './components/Dashboard'\n\nconst config = {\n  apiKey: \"AIzaSyB2ezpBcGq0JSHy-CcfaHjN3lH7iuQ0bU4\",\n  authDomain: \"gameoftruth0.firebaseapp.com\",\n  databaseURL: \"https://gameoftruth0.firebaseio.com\",\n  projectId: \"gameoftruth0\",\n  storageBucket: \"gameoftruth0.appspot.com\",\n  messagingSenderId: \"454910439616\",\n  appId: \"1:454910439616:web:023628c14fa7b0cb9e7d25\",\n  measurementId: \"G-QCN5J8MQFZ\"\n};\nfirebase.initializeApp(config);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isSignedIn: null,\n      dHeight: 0,\n      headerHeight: 56\n    };\n    window.addEventListener(\"resize\", this.update)\n  }\n  uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  update = () => {\n    this.setState({\n      dHeight: window.innerHeight\n    });\n  };\n\n  componentDidMount() {\n    this.update()\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        this.setState({ isSignedIn: !!user })\n      }\n    )\n  }\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    if (this.state.isSignedIn === null) {\n      return (\n        <div style={{ position: 'fixed', transform: 'translate(-50%, -50%)', top: '50%', left: '50%' }}>\n          <CircularProgress size={70} />\n        </div>\n      )\n    }\n    else if (this.state.isSignedIn === true) {\n      return (\n        <Router>\n          <Switch>\n            <Route path=\"/request/:id\" children={<RequestPage />} />\n            <div style={{ height: this.state.dHeight }}>\n              <Header headerHeight={this.state.headerHeight}/>\n              <div style={{ height: this.state.headerHeight }}></div>\n              <div style={{ display:'flex',height: this.state.dHeight - this.state.headerHeight}}>\n                <div style={{flex:1, display:'flex'}}>\n                <Dashboard headerHeight={this.state.headerHeight} dHeight={this.state.dHeight} />\n                </div>\n              </div>\n            </div>\n          </Switch>\n        </Router>\n      )\n    }\n    else {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}